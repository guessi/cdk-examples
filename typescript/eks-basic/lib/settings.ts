import { SubnetType } from "aws-cdk-lib/aws-ec2";
import {
  AuthenticationMode,
  KubernetesVersion,
  EndpointAccess,
  IpFamily,
  ClusterLoggingTypes,
} from "aws-cdk-lib/aws-eks";

export const clusterName = "cdk-eks-cluster";
export const clusterVersion = KubernetesVersion.V1_32;
export const endpointAccess = EndpointAccess.PUBLIC_AND_PRIVATE;
export const authenticationMode = AuthenticationMode.API_AND_CONFIG_MAP;
export const subnetType = SubnetType.PRIVATE_WITH_EGRESS;
export const ipFamily = IpFamily.IP_V4;
export const serviceIpv4Cidr = "172.20.0.0/16";
export const defaultCapacity = 0;
export const clusterLogging = [
  ClusterLoggingTypes.API,
  ClusterLoggingTypes.AUTHENTICATOR,
  ClusterLoggingTypes.SCHEDULER,
  ClusterLoggingTypes.AUDIT,
  ClusterLoggingTypes.CONTROLLER_MANAGER,
];
export const resolveConflicts = "OVERWRITE";

// Chart version definitions

export const chartVersionAwsLBC = "1.12.0";

// Managed Addons version definitions

export const supportedAddonKubeProxy = "kube-proxy";
export const supportedAddonCoreDns = "coredns";
export const supportedAddonVpcCni = "vpc-cni";
export const supportedAddonPodIdentityAgent = "pod-identity-agent";
export const supportedAddonEbsCsiDriver = "aws-ebs-csi-driver";
export const supportedAddonCloudWatchObservability =
  "amazon-cloudwatch-observability";
export const supportedAddonMetricsServer = "metrics-server";

export const defaultAddonVersions = new Map([
  [supportedAddonKubeProxy, undefined],
  [supportedAddonCoreDns, "v1.11.4-eksbuild.2"],
  [supportedAddonVpcCni, "v1.19.3-eksbuild.1"],
  [supportedAddonPodIdentityAgent, "v1.3.5-eksbuild.2"],
  [supportedAddonEbsCsiDriver, "v1.41.0-eksbuild.1"],
  [supportedAddonCloudWatchObservability, "v3.6.0-eksbuild.2"],
  [supportedAddonMetricsServer, "v0.7.2-eksbuild.2"],
]);

export const addonVersions = new Map<string, Map<KubernetesVersion, string>>([
  [
    supportedAddonKubeProxy,
    new Map([
      [KubernetesVersion.V1_32, "v1.32.0-eksbuild.2"],
      [KubernetesVersion.V1_31, "v1.31.3-eksbuild.2"],
      [KubernetesVersion.V1_30, "v1.30.9-eksbuild.3"],
    ]),
  ],
]);

/*
  The addon versions above are generated by the script below

  # Replace the ${ADDON_NAME} before apply
  ADDON_NAME=kube-proxy

  SUPPORTED_K8S_VERSION=("1.32" "1.31" "1.30")

  for K8S_VERSION in ${SUPPORTED_K8S_VERSION[@]}; do \
    aws eks describe-addon-versions \
      --addon-name ${ADDON_NAME} \
      --kubernetes-version ${K8S_VERSION} \
      --output json | \
        jq '.addons[].addonVersions[0].addonVersion'
  done
*/
